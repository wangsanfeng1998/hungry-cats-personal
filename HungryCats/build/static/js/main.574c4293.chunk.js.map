{"version":3,"sources":["drawer.js","styling.js","App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","primary","grey","useStyles","makeStyles","list","width","complexGridStyles","root","flexGrow","paper","padding","spacing","margin","maxWidth","image","height","img","display","maxHeight","ComplexGrid","product","productStates","classes","className","Paper","Grid","container","item","console","log","ButtonBase","src","sku","xs","sm","direction","Typography","gutterBottom","variant","title","size","style","color","quantity","Button","onClick","toggle","currencyFormat","selected","reduce","acc","val","set","get","Map","parseFloat","price","CartWindow","products","side","open","cartState","setCartState","ThemeProvider","Drawer","anchor","right","onClose","event","type","key","role","List","map","Divider","text","index","ListItem","button","ListItemText","sideList","uiConfig","signInFlow","signInOptions","firebase","auth","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","SignIn","firebaseAuth","Welcome","user","Header","displayName","signOut","Banner","Fragment","ElevationScroll","props","children","window","trigger","useScrollTrigger","disableHysteresis","threshold","target","undefined","React","cloneElement","elevation","menuButton","marginRight","ElevateAppBar","productState","useState","anchorEl","setAnchorEl","Boolean","CssBaseline","AppBar","Toolbar","IconButton","aria-label","aria-controls","aria-haspopup","currentTarget","handleMenu","Container","Box","my","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","database","ref","useSelection","setSelected","x","selectedSize","isRemove","newEntry","ind","findIndex","splice","slice","push","allOutOfStock","outOfStock","Product","allProducts","sizeState","disabled","setSize","productList","Text","includes","textAlign","secondary","App","data","setData","Object","values","setUser","useEffect","a","fetch","response","json","handleData","snap","combo","keys","assign","on","error","alert","off","fetchProducts","onAuthStateChanged","maxwidth","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.574c4293.chunk.js","sourcesContent":["import React from 'react';\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ShoppingCart from \"@bit/mui-org.material-ui-icons.shopping-cart\";\nimport { ThemeProvider } from '@material-ui/styles';\nimport grey from '@material-ui/core/colors/grey';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport ButtonBase from '@material-ui/core/ButtonBase';\n\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: grey,\n  },\n});\n\nconst useStyles = makeStyles({\n  list: {\n    width: 350,\n  },\n});\n\n//https://stackoverflow.com/questions/1960473/get-all-unique-values-in-a-javascript-array-remove-duplicates\nfunction onlyUnique(value, index, self) {\n    return self.indexOf(value) === index;\n}\n\nconst complexGridStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    maxWidth: 500,\n  },\n  image: {\n    width: 128,\n    height: 128,\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n}));\n\nfunction ComplexGrid({product, productStates}) {\n  const classes = complexGridStyles();\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Grid container spacing={2}>\n          <Grid item>\n            {console.log(product)}\n            <ButtonBase className={classes.image}>\n              {<img src={\"data/products/\"+product.sku+\"_2.jpg\"} height=\"100\" width=\"100\"></img>}\n            </ButtonBase>\n          </Grid>\n          <Grid item xs={12} sm container>\n            <Grid item xs container direction=\"column\" spacing={2}>\n              <Grid item xs>\n                <Typography gutterBottom variant=\"subtitle1\">\n                  {product.title}\n                </Typography>\n                <Typography variant=\"body2\" gutterBottom>\n                  {product.size + \" | \" + product.style}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {\"quantity: \" + product.quantity}\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Button onClick={ () => productStates.toggle(product, product.size, true) }>\n                  Remove\n                </Button>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <Typography variant=\"subtitle1\">\n                {product.currencyFormat + \" \" + productStates.selected.reduce((acc, val) => acc.set(val, 1 + (acc.get(val) || 0)), new Map()).get(product)*parseFloat(product.price, 10)}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n}\n\n\nexport function CartWindow({products, productStates, cartState, setCartState}) {\n  const classes = useStyles();\n  const toggleDrawer = (side, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setCartState({ ...cartState, [side]: open });\n  };\n\n  const sideList = (side,products, productStates, cartState) => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      //onClick={toggleDrawer(side, false)}\n      //onKeyDown={toggleDrawer(side, false)}\n    >\n      <List>\n        {productStates.selected.map(product =>\n          <ComplexGrid key={product} product={product} productStates={productStates}/>\n        )}\n      </List>\n      <Divider />\n      <List>\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n  return (\n    <div>\n      <ThemeProvider theme={theme}>\n        <Button size=\"large\" color=\"primary\" onClick= {() =>{setCartState({ ...cartState, ['right']: true })}}><ShoppingCart /></Button>\n      </ThemeProvider>\n      <Drawer anchor=\"right\" open={cartState.right} onClose={toggleDrawer('right', false)}>\n        {sideList('right', products, productStates, cartState)}\n      </Drawer>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Button, Message, Title} from 'rbx';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport {CartWindow} from './drawer';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\n\nconst uiConfig = {\n  signInFlow: 'popup',\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID\n  ],\n  callbacks: {\n    signInSuccessWithAuthResult: () => false\n  }\n};\n\nconst SignIn = () => (\n  <StyledFirebaseAuth\n    uiConfig={uiConfig}\n    firebaseAuth={firebase.auth()}\n  />\n);\n\nconst Welcome = ({ user }) => (\n  <Message color=\"info\">\n    <Message.Header>\n      Welcome, {user.displayName}\n      <Button primary onClick={() => firebase.auth().signOut()}>\n        Log out\n      </Button>\n    </Message.Header>\n  </Message>\n);\n\nconst Banner = ({ user }) => (\n  <React.Fragment>\n    { user ? <Welcome user={ user } /> : <SignIn /> }\n  </React.Fragment>\n);\n\nfunction ElevationScroll(props) {\n  const { children, window } = props;\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n    target: window ? window() : undefined,\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nElevationScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nexport function ElevateAppBar({ props, products, productState, cartState, setCartState, user}) {\n  const classes = useStyles();\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleChange = event => {\n    setAuth(event.target.checked);\n  };\n\n  const handleMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <ElevationScroll {...props}>\n        <AppBar>\n          <Toolbar>\n            <Typography variant=\"h5\" className={classes.title}><Banner user={ user } /></Typography>\n            {auth && (\n              <div>\n                <IconButton\n                  aria-label=\"shopping cart\"\n                  aria-controls=\"menu-appbar\"\n                  aria-haspopup=\"true\"\n                  onClick={function(event){handleMenu(event);}}\n                  color=\"inherit\"\n                >\n                </IconButton>\n                <CartWindow products={products} productStates={productState} cartState={cartState} setCartState={setCartState}/>\n              </div>\n            )}\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n      <Toolbar />\n      <Container>\n        <Box my={2}>\n        </Box>\n      </Container>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport 'rbx/index.css';\nimport { Button, Container, Message, Title} from 'rbx';\nimport {ElevateAppBar, AddToCart} from './styling';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD3nnHJp02-ZeipmqAD60PjVr1vcIcJpfY\",\n  authDomain: \"react-shopping-cart-7d1d3.firebaseapp.com\",\n  databaseURL: \"https://react-shopping-cart-7d1d3.firebaseio.com/\",\n  projectId: \"react-shopping-cart-7d1d3\",\n  storageBucket: \"react-shopping-cart-7d1d3.appspot.com\",\n  messagingSenderId: \"476849977207\",\n  appId: \"1:476849977207:web:b7eff48e3e3eb3195ed372\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.database().ref();\n\nconst useSelection = () => {\n  const [selected, setSelected] = useState([]);\n  const toggle = (x, selectedSize, isRemove) => {\n    if (isRemove){\n      let newEntry = selected;\n      const ind = newEntry.findIndex(item=>item.sku === x.sku && item.size===selectedSize);\n      if (ind > -1) {\n        newEntry[ind].quantity -= 1;\n        if (newEntry[ind].quantity === 0) {\n          newEntry.splice(ind,1);\n        }\n      }\n      setSelected(newEntry.slice(0))\n    }\n    else{\n      let newEntry = selected;\n      const ind = newEntry.findIndex(item=>item.sku === x.sku && item.size===selectedSize.size);\n      if (ind > -1) {\n        newEntry[ind].quantity+=1;\n      } else {\n        newEntry.push({\n          title:x.title,\n          style:x.style,\n          sku:x.sku,\n          currencyFormat:x.currencyFormat,\n          price:x.price,\n          quantity: 1,\n          size:selectedSize.size,\n        })\n      }\n      setSelected(newEntry);\n    }\n  };\n  return [ selected, toggle ];\n};\n\nconst allOutOfStock = (product) =>{\n  if (outOfStock(product, 'S') && outOfStock(product, 'M') && outOfStock(product, 'L') && outOfStock(product, 'XL')){\n    return true\n  }\n  return false\n}\n\nconst outOfStock = (product, size) =>{\n  return product[size] === 0\n}\n\nconst Text = (selected, product, productList) => {\n  if (allOutOfStock(product)){\n    return \"Out of Stock\"\n  }\n  return \"Add to cart\"\n}\n\nconst Product = ({allProducts, product, productState, sizeState, cartState, setCartState }) => {\n  const classes = useStyles();\n  var currSize = [];\n  return (\n  <Paper className={classes.paper}>\n    {<img src={\"data/products/\"+product.sku+\"_1.jpg\"} height=\"250\" width=\"250\"></img>}\n    {<br/>}\n    {product.title}\n    {<br/>}\n    {product.currencyFormat}\n    {product.price}\n    {<br/>}\n    <Button variant=\"contained\" className={classes.button} disabled={outOfStock(product, 'S')} onClick={() =>{sizeState.setSize({ ...sizeState, ['size']: 'S' })}}>S</Button>\n    <Button variant=\"contained\" className={classes.button} disabled={outOfStock(product, 'M')} onClick={() =>{sizeState.setSize({ ...sizeState, ['size']: 'M' })}}>M</Button>\n    <Button variant=\"contained\" className={classes.button} disabled={outOfStock(product, 'L')} onClick={() =>{sizeState.setSize({ ...sizeState, ['size']: 'L' })}}>L</Button>\n    <Button variant=\"contained\" className={classes.button} disabled={outOfStock(product, 'XL')} onClick={() =>{sizeState.setSize({ ...sizeState, ['size']: 'XL' })}}>XL</Button>\n    {<br/>}\n    <Button disabled={allOutOfStock(product)} onClick={ () => {productState.toggle(product, sizeState.selectedSize, false); setCartState({ ...cartState, ['right']: true });}}>\n        { Text(productState.selected.includes(product), product, productState.selected) }\n    </Button>\n  </Paper>\n  );\n};\n\nconst ProductList = ({ products }) => {\n  const [selected, toggle] = useSelection();\n  return (\n    <React.Fragment>\n      { products.map(product => <Product key={product.sku} product={product}\n        quantity={0} state={ { selected, toggle } } />) }\n    </React.Fragment>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(5),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst App = () => {\n  const [data, setData] = useState({});\n  const [selected, toggle] = useSelection();\n  const products = Object.values(data);\n  // shopping cart state\n  const [cartState, setCartState] = useState({right: false,});\n  // size state\n  const [selectedSize, setSize] = useState({size:\"S\",});\n  // user state\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      const response = await fetch('./data/products.json');\n      const json = await response.json();\n      const handleData = snap=>{\n        if(snap.val()) {\n          let combo = {};\n          Object.keys(json).map(item => combo[item] = Object.assign(json[item], snap.val()[item]));\n          setData(combo);\n        }\n    };\n    db.on('value', handleData, error => alert(error));\n    return () => { db.off('value', handleData); };\n    }\n    fetchProducts();\n  }, []);\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(setUser);\n  }, []);\n  return (\n    <Container maxwidth=\"1000\">\n    <ElevateAppBar product={products} productState={ {selected,toggle} } cartState={cartState} setCartState={setCartState} user={user}/>\n    <Grid container spacing={3}>\n    {products.map(product =>\n      <Grid item xs={3} key={product.sku}>\n        <Container>\n          <Product allProducts={products} product={product} productState={{selected,toggle}} sizeState={{selectedSize,setSize}} cartState={cartState} setCartState={setCartState}/>\n        </Container>\n      </Grid>)}\n    </Grid>\n    </Container>\n\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}